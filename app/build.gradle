// SPDX-License-Identifier: MIT
buildscript {
    ext.kotlin_version = '1.8.20'
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 33

    defaultConfig {
        applicationId "ru.nsu.bobrofon.easysshfs"
        minSdkVersion 16
        targetSdkVersion 33
        versionCode 86
        versionName "0.5.12-dev"

        externalNativeBuild {
            cmake {
                targets "ssh", "sshfs"
            }
        }
    }
    signingConfigs {
        release
        debug
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.debug
        }
    }
    externalNativeBuild {
        cmake {
            path file('CMakeLists.txt')
        }
    }
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    namespace 'ru.nsu.bobrofon.easysshfs'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation "androidx.fragment:fragment-ktx:1.6.0"
    implementation "androidx.core:core-ktx:1.10.1"

    def libsuVersion = '3.2.1'
    // The core module is used by all other components
    implementation "com.github.topjohnwu.libsu:core:${libsuVersion}"
    // Optional: APIs for creating root services
    // implementation "com.github.topjohnwu.libsu:service:${libsuVersion}"
    // Optional: For com.topjohnwu.superuser.io classes
    // implementation "com.github.topjohnwu.libsu:io:${libsuVersion}"
    // Optional: Bundle prebuilt BusyBox binaries
    implementation "com.github.topjohnwu.libsu:busybox:${libsuVersion}"
}

def signingPropsFile = file("signing.properties")
if (signingPropsFile.exists()) {
    def signingProps = new Properties()
    signingProps.load(new FileInputStream(signingPropsFile))

    android.buildTypes.release.signingConfig.storeFile = file(signingProps['RELEASE_STORE_FILE'])
    android.buildTypes.release.signingConfig.storePassword = signingProps['RELEASE_STORE_PASSWORD']
    android.buildTypes.release.signingConfig.keyAlias = signingProps['RELEASE_KEY_ALIAS']
    android.buildTypes.release.signingConfig.keyPassword = signingProps['RELEASE_KEY_PASSWORD']

    android.buildTypes.debug.signingConfig.storeFile = file(signingProps['DEBUG_STORE_FILE'])
    android.buildTypes.debug.signingConfig.storePassword = signingProps['DEBUG_STORE_PASSWORD']
    android.buildTypes.debug.signingConfig.keyAlias = signingProps['DEBUG_KEY_ALIAS']
    android.buildTypes.debug.signingConfig.keyPassword = signingProps['DEBUG_KEY_PASSWORD']
} else {
    android.buildTypes.release.signingConfig = null
    android.buildTypes.debug.signingConfig = null
}
